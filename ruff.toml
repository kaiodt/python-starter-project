line-length = 79
exclude = [".venv", "migrations"]

[lint]
preview = true
select = [
  "A",     # flake8-builtins
  "AIR",   # Airflow rules
  "ANN",   # flake8-annotations
  "ARG",   # flake8-unused-arguments
  "ASYNC", # flake8-async
  "B",     # flake8-bugbear
  "BLE",   # flake8-blind-except
  "C4",    # flake8-comprehensions
  "C90",   # mccabe
  "COM",   # flake8-commas
  "D",     # pydocstyle
  "E",     # pycodestyle (errors)
  "EM",    # flake8-errmsg
  "ERA",   # eradicate
  "F",     # Pyflakes
  "FAST",  # FastAPI rules
  "FBT",   # flake8-boolean-trap
  "FLY",   # flynt
  "FURB",  # refurb
  "G",     # flake8-logging-format
  "I",     # isort
  "ICN",   # flake8-import-conventions
  "ISC",   # flake8-implicit-str-concat
  "LOG",   # flake8-logging
  "N",     # pep8-naming
  "NPY",   # NumPy rules
  "PERF",  # Perflint
  "PIE",   # flake8-pie
  "PD",    # flake8-pandas-vet
  "PL",    # Pylint
  "PT",    # flake8-pytest-style
  "PTH",   # flake8-use-pathlib
  "PYI",   # flake8-pyi
  "Q",     # flake8-quotes
  "RET",   # flake8-return
  "RSE",   # flake8-raise
  "RUF",   # Ruff-specific rules
  "S",     # flake8-bandit
  "SIM",   # flake8-simplify
  "SLF",   # flake8-self
  "SLOT",  # flake8-slots
  "T10",   # flake8-debugger
  "TC",    # flake8-type-checking
  "TID",   # flake8-tidy-imports
  "TRY",   # tryceratops
  "UP",    # pyupgrade
  "W",     # pycodestyle (warnings)
]

ignore = [
  "D1", "D203", "D213",
  "PT001", "PT023",
]

[lint.per-file-ignores]
"tests/**" = [
  "ANN",     # flake8-annotations
  "PLR2004", # Magic value used in comparison
  "S101",    # Use of `assert` detected
]

"**/__init__.py" = [
  "F401", # Imported but unused
  "F403", # Wildcard imports
]

[lint.flake8-annotations]
ignore-fully-untyped = true
	
[lint.flake8-quotes]
inline-quotes = "single"
docstring-quotes = "double"
multiline-quotes = "double"

[lint.isort]
force-single-line = false

[lint.mccabe]
max-complexity = 10

[lint.pycodestyle]
max-doc-length = 79